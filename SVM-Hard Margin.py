import pandas as pd
import numpy as np
import cvxopt
import matplotlib.pyplot as plt
from cvxopt import solvers
from cvxopt.base import matrix

df = pd.read_excel('all2.xlsx')
df = np.array(df)
xx, y = np.split(df, (244,), axis=1)
xx = xx[:, 16:18]/10000

x = np.linspace(8, 15, 100)

# P = np.dot(xx, xx.T)
# print(P)
# P = matrix(P)

P = matrix([[3.76658208, 3.86944075, 3.75435408, 3.80425717, 3.40707681, 3.35839725,
  3.45893384, 3.39969518, 3.27446537, 2.69934641, 2.67672624, 2.33190577,
  2.30560542, 2.25526664, 2.95746928, 2.68206563],
 [3.86944075, 3.97536077, 3.85700691, 3.90823008, 3.49951818, 3.44948988,
  3.55278694, 3.49188908, 3.36318918, 2.77239273, 2.74912524, 2.39488451,
  2.36786407, 2.31614591, 3.03750188, 2.75455742],
 [3.75435408, 3.85700691, 3.74223076, 3.79195019, 3.39571161, 3.34718025,
  3.44739806, 3.38833066, 3.26348189, 2.69024422, 2.66768247, 2.3239795,
  2.29776358, 2.24758583, 2.94749736, 2.67297763],
 [3.80425717, 3.90823008, 3.79195019, 3.84233799, 3.44095306, 3.39178002,
  3.4933273,  3.43348207, 3.30698264, 2.72612055, 2.70326411, 2.35499329,
  2.32842924, 2.27758535, 2.98680411, 2.70863897],
 [3.40707681, 3.49951818, 3.39571161, 3.44095306, 3.08331019, 3.03932293,
  3.13022807, 3.07674211, 2.96358448, 2.44329185, 2.42290101, 2.11100136,
  2.08721575, 2.0416928,  2.67692664, 2.42785674],
 [3.35839725, 3.44948988, 3.34718025, 3.39178002, 3.03932293, 2.9959663,
  3.08557095, 3.03285377, 2.92131848, 2.40845658, 2.38836036, 2.08091749,
  2.05747193, 2.01259992, 2.63876018, 2.39325115],
 [3.45893384, 3.55278694, 3.44739806, 3.4933273,  3.13022807, 3.08557095,
  3.17785998, 3.12355916, 3.00867828, 2.48046712, 2.45976537, 2.14311842,
  2.11897075, 2.07275483, 2.71765675, 2.46479553],
 [3.39969518, 3.49188908, 3.38833066, 3.43348207, 3.07674211, 3.03285377,
  3.12355916, 3.07019683, 2.95729376, 2.43812315, 2.41778201, 2.10655883,
  2.08282511, 2.03740166, 2.67126345, 2.42273692],
 [3.27446537, 3.36318918, 3.26348189, 3.30698264, 2.96358448, 2.92131848,
  3.00867828, 2.95729376, 2.8485643,  2.34850944, 2.32892627, 2.0291683,
  2.00630938, 1.96256051, 2.57308025, 2.33371421],
 [2.69934641, 2.77239273, 2.69024422, 2.72612055, 2.44329185, 2.40845658,
  2.48046712, 2.43812315, 2.34850944, 1.93627251, 1.92013994, 1.67303214,
  1.6541888,  1.61812564, 2.12142364, 1.92410673],
 [2.67672624, 2.74912524, 2.66768247, 2.70326411, 2.42290101, 2.38836036,
  2.45976537, 2.41778201, 2.32892627, 1.92013994, 1.90414667, 1.65911014,
  1.64042497, 1.60466467, 2.10374824, 1.90808762],
 [2.33190577, 2.39488451, 2.3239795,  2.35499329, 2.11100136, 2.08091749,
  2.14311842, 2.10655883, 2.0291683,  1.67303214, 1.65911014, 1.44564105,
  1.42936364, 1.39821179, 1.83301094, 1.66256308],
 [2.30560542, 2.36786407, 2.29776358, 2.32842924, 2.08721575, 2.05747193,
  2.11897075, 2.08282511, 2.00630938, 1.6541888,  1.64042497, 1.42936364,
  1.41326989, 1.38246956, 1.81236572, 1.64384103],
 [2.25526664, 2.31614591, 2.24758583, 2.27758535, 2.0416928,  2.01259992,
  2.07275483, 2.03740166, 1.96256051, 1.61812564, 1.60466467, 1.39821179,
  1.38246956, 1.35234208, 1.77285401, 1.60801035],
 [2.95746928, 3.03750188, 2.94749736, 2.98680411, 2.67692664, 2.63876018,
  2.71765675, 2.67126345, 2.57308025, 2.12142364, 2.10374824, 1.83301094,
  1.81236572, 1.77285401, 2.32427937, 2.10809409],
 [2.68206563, 2.75455742, 2.67297763, 2.70863897, 2.42785674, 2.39325115,
  2.46479553, 2.42273692, 2.33371421, 1.92410673, 1.90808762, 1.66256308,
  1.64384103, 1.60801035, 2.10809409, 1.91204726]])


q = matrix(-1.0, (16,1))

# G = np.diag([-1] * 16)
# G = matrix(G)
# print(G)
G = matrix([[-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
            [0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
            [0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
            [0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
            [0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
            [0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0],
[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0]
            ])

h = matrix(0.0, (16,1))

# A = y
# A = matrix(A)
# print(A)
A = matrix([1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,]).T
# A = matrix([-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,]).T

b = np.zeros((1,1))
b = matrix(b)
print(b)

sol = cvxopt.solvers.qp(P,q,G,h,A,b)
alpha = sol['x']
print(alpha)

X0 = xx[:, 0].flatten()
X1 = xx[:, 1].flatten()

w1 = (alpha  * y * X0).sum()
w2 = (alpha  * y * X1).sum()

W = np.array([w1, w2])

print("w1=", w1)
print("w2=", w2)

W = np.mat(W)
xx = np.mat(xx[1, :].T)
xx = xx.T

b = int(-1 - W * xx)
print("b=", b)

